<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////////////
// 
//  Copyright (c) 2014 Nailson <nailsonnego@gmail.com>
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
//
///////////////////////////////////////////////////////////////////////////////////
-->

<nail:GroupBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
               xmlns:s="library://ns.adobe.com/flex/spark" 
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:nail="library://ns.nail.com/naillib"
               label="@Resource(key='info', bundle='strings')"
               fontSize="10">
    
    <fx:Script>
        <![CDATA[
            import nail.otlib.core.Version;
            import nail.otlib.core.Versions;
            import otlib.utils.FilesInfo;
            
            //--------------------------------------------------------------------------
            // METHODS
            //--------------------------------------------------------------------------
            
            //--------------------------------------
            // Public
            //--------------------------------------
            
            public function setFilesInfo(info:FilesInfo):void
            {
                if (info) {
                    var version:Version = Versions.instance.getBySignatures(info.datSignature, info.sprSignature);
                    filesVersionLabel.text = version.toString();
                    datSignatureLabel.text = info.datSignature.toString(16).toUpperCase();
                    itemsCountLabel.text = info.maxItemId.toString();
                    outfitsCountLabel.text  =info.maxOutfitId.toString();
                    effectsCountLabel.text = info.maxEffectId.toString();
                    missilesCountLabel.text = info.maxMissileId.toString();
                    sprSignatureLabel.text = info.sprSignature.toString(16).toUpperCase();
                    spritesCountLabel.text = info.maxSpriteId.toString();
                    extendedValueLabel.text = resourceManager.getString("strings", info.extended ? "yes" : "no");
                    transparencyValueLabel.text = resourceManager.getString("strings", info.transparency ? "yes" : "no");
                } else {
                    this.clear();
                }
            }
            
            public function clear():void
            {
                filesVersionLabel.text = null;
                datSignatureLabel.text = null;
                itemsCountLabel.text = null;
                outfitsCountLabel.text = null;
                effectsCountLabel.text = null;
                missilesCountLabel.text = null;
                sprSignatureLabel.text = null;
                spritesCountLabel.text = null;
                extendedValueLabel.text = null;
                transparencyValueLabel.text = null;
            }
        ]]>
    </fx:Script>
    
    <s:Group width="100%"
             height="100%">
        
        <s:layout>
            <s:TileLayout verticalGap="3"
                          requestedColumnCount="2"
                          paddingLeft="5"
                          paddingRight="5"
                          paddingTop="10"
                          paddingBottom="10"/>
        </s:layout>
        <s:Label text="{resourceManager.getString('strings', 'version') + ':'}"/>
        <s:Label id="filesVersionLabel"/>
        <s:Label text="Dat:"/>
        <s:RichEditableText id="datSignatureLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="{resourceManager.getString('strings', 'items') + ':'}"/>
        <s:RichEditableText id="itemsCountLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="{resourceManager.getString('strings', 'outfits') + ':'}"/>
        <s:RichEditableText id="outfitsCountLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="{resourceManager.getString('strings', 'effects') + ':'}"/>
        <s:RichEditableText id="effectsCountLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="{resourceManager.getString('strings', 'missiles') + ':'}"/>
        <s:RichEditableText id="missilesCountLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="Spr:"/>
        <s:RichEditableText id="sprSignatureLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="{resourceManager.getString('strings', 'sprites') + ':'}"/>
        <s:RichEditableText id="spritesCountLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="{resourceManager.getString('strings', 'extended') + ':'}"/>
        <s:RichEditableText id="extendedValueLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:Label text="{resourceManager.getString('strings', 'transparency') + ':'}"/>
        <s:RichEditableText id="transparencyValueLabel"
                            editable="false"
                            focusEnabled="false"
                            height="13"/>
        <s:filters>
            <s:DropShadowFilter color="0x272727"
                                distance="1"
                                blurX="1"
                                blurY="1"/>
        </s:filters>
    </s:Group>
</nail:GroupBox>
